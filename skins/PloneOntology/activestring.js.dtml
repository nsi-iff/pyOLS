/*
// +----------------------------------------------------------------------+
// | Copyright (c) 2004 Bitflux GmbH                                      |
// +----------------------------------------------------------------------+
// | Licensed under the Apache License, Version 2.0 (the "License");      |
// | you may not use this file except in compliance with the License.     |
// | You may obtain a copy of the License at                              |
// | http://www.apache.org/licenses/LICENSE-2.0                           |
// | Unless required by applicable law or agreed to in writing, software  |
// | distributed under the License is distributed on an "AS IS" BASIS,    |
// | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or      |
// | implied. See the License for the specific language governing         |
// | permissions and limitations under the License.                       |
// +----------------------------------------------------------------------+
// | Author: Bitflux GmbH <devel@bitflux.ch>                              |
// +----------------------------------------------------------------------+
*/

/*
Further modified by Rocky Burt and Jean-Paul Ladage.
*/

var activeStringReq = false;
var t = null;
var activeStringLast = "";
var activeStringQueryTarget = "searchVocabulary?field=";

var searchForm = null;
var searchInput = null;
var active = new Array();

var isIE = false;

var ACTIVERESULT = "activeresult";
var ACTIVERESULT_HIGHLIGHT = "activeresult-highlight";
var ACTIVERESULT_SHADOW = "activeresult-shadow";

var handledInputs = new Array();

function getElementDimensions(elemID) {
    var base = document.getElementById(elemID);
    var offsetTrail = base;
    var offsetLeft = 0;
    var offsetTop = 0;
    while (offsetTrail) {
        offsetLeft += offsetTrail.offsetLeft;
        offsetTop += offsetTrail.offsetTop;
        offsetTrail = offsetTrail.offsetParent;
    }
    if (navigator.userAgent.indexOf("Mac") != -1 &&
        typeof document.body.leftMargin != "undefined") {
        offsetLeft += document.body.leftMargin;
        offsetTop += document.body.topMargin;
    }
    return {left:offsetLeft, top:offsetTop, 
	width:base.offsetWidth, height: base.offsetHeight,
	bottom: offsetTop + base.offsetHeight, 
	right : offsetLeft + base.offsetWidth};
}

function loadHandler(input) {
	var found = 0;
	var x = 0;
	while (x < handledInputs.length && found == 0) {
		if (handledInputs[x] == input.name)
			found = 1;
	
		x++;
	}
	
    if (found == 0) {
    	reallyLoadHandler(input);
		handledInputs[handledInputs.length] = input.name;
    }
}

function reallyLoadHandler(input) {
	if (navigator.userAgent.indexOf("Safari") > 0) {
		input.addEventListener("keydown",keyPressHandler,false);
		input.addEventListener("focus",launchSearch,false);
//		input.addEventListener("blur",hideDropdown,false);
	} else if (navigator.product == "Gecko") {
		input.addEventListener("keypress",keyPressHandler,false);
		input.addEventListener("blur",hideDropdownAfterDelay,false);
	} else {
	      input.attachEvent('onkeydown',keyPressHandler);
//		input.attachEvent("onblur",hideDropdown);
		isIE = true;
	}
			
	input.setAttribute("autocomplete","off");

	var pos = getElementDimensions(input.name);	
	result = document.getElementById(ACTIVERESULT+'-'+input.name);
	result.style.position="absolute";
	result.style.top = pos.bottom + "px";
	result.style.left = pos.left + "px";	
	result.style.width = pos.width + "px";
}

function hideDropdownAfterDelay(event) {
	window.setTimeout("hideDropdown('"+event.target.name+"')",400);
}
	
function hideDropdown(inputId) {
	document.getElementById(ACTIVERESULT+"-"+inputId).style.display = "none";
	setActive(inputId, null);
}

function keyPressHandler(event) {
	input = event.target;

	var pos = null;
	var set = null;
	if (event.keyCode == 40) {
		//KEY DOWN
		set = document.getElementById(ACTIVERESULT_SHADOW+"-"+input.name).getElementsByTagName('li');

		pos = active[input.name];
		if (pos == null || pos >= set.length-1) {
			pos = 0;
		} else {
			pos = pos + 1;
		}
	} else if (event.keyCode == 38 ) {
		//KEY UP
		set = document.getElementById(ACTIVERESULT_SHADOW+"-"+input.name).getElementsByTagName('li');

		pos = active[input.name];
		if (pos == null || pos == 0) {
			pos = set.length-1;
		} else {
			pos = pos - 1;
		}
	} else if (event.keyCode == 27) {
		//ESC
		hideDropdown(input.name);
	} else if (event.keyCode == 13) {
		//ENTER
		
		set = document.getElementById(ACTIVERESULT_SHADOW+"-"+input.name).getElementsByTagName('li');

		pos = active[input.name];
		if (pos != null) {
			highlight = set[pos];
			input.value = highlight.firstChild.innerHTML;
		}
		
		pos = null;
		set = null;
		hideDropdown();
	}


	if (pos != null) {
		setActive(input.name, pos);
		highlight = set[pos];

		if (!isIE) { event.preventDefault(); }	
	}
}
function activeStringStart(input) {
	if (t) {
		window.clearTimeout(t);
	}
	t = window.setTimeout("launchSearch('"+input.name+"')",200);
}

function setActive(inputId, pos) {
	oldPos = active[inputId];
	active[inputId] = pos;

	/* the following is for debugging the active selection */
	set = document.getElementById(ACTIVERESULT_SHADOW+"-"+inputId).getElementsByTagName('li');
	if (oldPos != null)
		set[oldPos].style.background = 'none';
        if (pos != null)
	        set[pos].style.background = 'red';		
}

function launchSearch(inputId) {
    var input = document.getElementById(inputId)

	if (typeof activeStringRoot == "undefined") {
		activeStringRoot = "";
	}
	if (typeof activeStringRootSubDir == "undefined") {
		activeStringRootSubDir = "";
	}

	if (activeStringLast != input.value) {
	if (activeStringReq && activeStringReq.readyState < 4) {
		activeStringReq.abort();
	}
	if (input.value == "") {
		hideDropdown(input.name);
		return false;
	}

	activeStringReq = new XMLHttpRequest();
	activeStringReq.onreadystatechange= httpRequestChangeHandler;
	var url = activeStringRoot + activeStringQueryTarget + inputId + "&searchTerm="+ input.value;
	activeStringReq.open("GET", url);
	activeStringLast = input.value;
	activeStringReq.send(null);
	}
}


function httpRequestChangeHandler() {

	if (activeStringReq.readyState == 4) {
		if (activeStringReq.status > 299 || activeStringReq.status < 200  ||
			activeStringReq.responseText.length < 10) return;	

		var response = activeStringReq;
		var domDoc = Sarissa.getDomDocument();
                domDoc = (new DOMParser()).parseFromString(activeStringReq.responseText, "text/xml");
		var el = domDoc.selectSingleNode('//html/body/h1');
		var inputId = Sarissa.getText(el, 1);

		var  res = document.getElementById(ACTIVERESULT+"-"+inputId);
		res.style.display = "block";

		var  sh = document.getElementById(ACTIVERESULT_SHADOW+"-"+inputId);	

		el = domDoc.selectSingleNode('//html/body/ul');
		sh.innerHTML = Sarissa.serialize(el);
		
		setActive(inputId, null);
	}
}

function setInput(inputId, value) {
	input = document.getElementById(inputId);
	input.value = value;
}
